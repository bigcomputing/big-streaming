#!/usr/bin/env python

import sys
import argloop
from nws.client import NetWorkSpace

validOptions = {'t':False, 'h':'localhost', 'p':'8765', 'w':'__default', 'v':'default'}

helpMessage = """
Usage: find [options] variable
Find a NetWorkSpace variable value.  stdin variables accepted.

Options:
-t  Try. Do not block if no values are availible. Off by default.
-h  Hostname to connect to the server on. Defaults to 'localhost'.
-p  Port to connect to ther server on. Defaults to '8765'.
-w  Workspace name to use. Defaults to '__default'.
-v  Variable name to use. Defaults to 'default'.

example:
find -t -hmysystem -p2222 -wfood -vbreakfast eggs
or
cat breakfast_foods.txt | find -t -hmysystem -p2222 -wfood -vbreakfast
"""

def find(workspace, variable, tri=False):
    if tri:
        ret = workspace.findTry(variable)
        if ret == None:
            ret = ''
        sys.stdout.write(ret+'\n')
    else:
        sys.stdout.write(workspace.find(variable)+'\n')

if __name__ == '__main__':
    if len(sys.argv) < 2:
        sys.stderr.write('Usage: find [options] variable\nUse -h for help\n')
        sys.exit(1)
    options = argloop.processArgs(sys.argv[1:])
    
    if options[0] == '-h':
        print helpMessage
        sys.exit(0)

    for opt in options:
        if validOptions.keys().count(opt[1]) < 1:
            sys.stderr.write('Invalid option: '+opt[:2]+'\n')
            sys.exit(1)
        if len(opt) == 2:
            validOptions[opt[1]] = True
        else:
            validOptions[opt[1]] = opt[2:]
    
    workspace = NetWorkSpace(wsName = validOptions['w'], serverHost = validOptions['h'],
                             serverPort = int(validOptions['p']))

    if len(options) + 1 == len(sys.argv):
        for value in sys.stdin:
            find(workspace, value.strip(), validOptions['t'])
    else:
        find(workspace, sys.argv[len(sys.argv)-1], validOptions['t'])
